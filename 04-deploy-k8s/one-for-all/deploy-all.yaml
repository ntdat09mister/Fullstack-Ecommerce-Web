apiVersion: v1
kind: Namespace
metadata:
  name: ecommerce
---

apiVersion: v1
kind: Secret
metadata:
  name: ecommerce-backend-database-connection
  namespace: ecommerce
type: Opaque
data:
  MARIADB_DB: ZnVsbC1zdGFjay1lY29tbWVyY2U=
  MARIADB_HOST: MTkyLjE2OC4xNzAuMTE5
  MARIADB_PASSWORD: U3Ryb25nUGE1NVdvckQ=
  MARIADB_PORT: MzMwNg==
  MARIADB_USERNAME: ZWNvbW1lcmNlYXBw
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-backend-application-properties-configmap
  namespace: ecommerce
data:
  application.properties: |
    spring.datasource.url=jdbc:mysql://${MARIADB_HOST}:${MARIADB_PORT}/${MARIADB_DB}
    spring.datasource.username=${MARIADB_USERNAME}
    spring.datasource.password=${MARIADB_PASSWORD}
    spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
    spring.datasource.sql-script-encoding=UTF-8
    spring.jpa.properties.hibernate.globally_quoted_identifiers=true
    spring.jpa.hibernate.ddl-auto=none
    spring.jpa.show-sql=true
    spring.jpa.properties.hibernate.format_sql=true

    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

    spring.data.rest.base-path=/api

    allowed.origins=http://ecommerce.danny.vn

    spring.data.rest.detection-strategy=ANNOTATED

    okta.oauth2.client-id=0oab0lzwjoN1Rjsar5d7

    okta.oauth2.issuer=https://dev-82108115.okta.com/oauth2/default
---

apiVersion: v1
kind: Service
metadata:
  name: ecommerce-backend-service
  namespace: ecommerce
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: ecommerce-backend
  type: ClusterIP
---

apiVersion: v1
kind: Service
metadata:
  name: ecommerce-frontend-service
  namespace: ecommerce
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: ecommerce-frontend
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-backend-deployment
  namespace: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecommerce-backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ecommerce-backend
    spec:
      containers:
        - name: ecommerce-backend
          image: ntdat09mister/ecommerce-backend:v2
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: ecommerce-backend-database-connection
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          resources:
            requests:
              cpu: "100m"
            limits:
              cpu: "1000m"
          volumeMounts:
            - mountPath: /run/src/main/resources/application.properties
              name: ecommerce-backend-application-properties-config-volume
              subPath: application.properties
      volumes:
        - configMap:
            defaultMode: 420
            name: ecommerce-backend-application-properties-configmap
          name: ecommerce-backend-application-properties-config-volume
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-frontend-deployment
  namespace: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecommerce-frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ecommerce-frontend
    spec:
      containers:
        - image: ntdat09mister/ecommerce-frontend:v1
          imagePullPolicy: Always
          name: ecommerce-frontend
          ports:
            - containerPort: 80
              name: tcp
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-frontend-ingress
  namespace: ecommerce
spec:
  ingressClassName: haproxy
  rules:
    - host: ecommerce-frontend.danny.vn
      http:
        paths:
          - backend:
              service:
                name: ecommerce-frontend-service
                port:
                  number: 80
            path: /
            pathType: Prefix
---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ecommerce-backend-autoscaling
  namespace: ecommerce
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: deployment
    name: ecommerce-backend-deployment
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-backend-ingress
  namespace: ecommerce
spec:
  ingressClassName: haproxy
  rules:
    - host: api-ecommerce.danny.vn
      http:
        paths:
          - backend:
              service:
                name: ecommerce-backend-service
                port:
                  number: 8080
            path: /
            pathType: Prefix